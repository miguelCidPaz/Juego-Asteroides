package ObjetosdeJuego;

import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.util.ArrayList;

import Estados.GameState;
import maths.Vector2D;

public abstract class ObjetosMoviles extends GameObject{
	
	protected Vector2D velocidad;
	protected AffineTransform at;
	protected double angulo;
	protected double maxVel;
	protected int width;
	protected int height;
	protected GameState gamestate;

	public ObjetosMoviles(Vector2D position, Vector2D velocidad, double maxVel, BufferedImage texture, GameState gamestate) {
		super(position, texture);
		this.velocidad = velocidad;
		this.maxVel = maxVel;
		this.gamestate = gamestate;
		width = texture.getWidth();
		height = texture.getHeight();
		angulo = 0;
		// TODO Auto-generated constructor stub
	}
	
	protected void colisiones() {
		ArrayList<ObjetosMoviles> objetosmoviles = gamestate.getObjetosmoviles();
		
		for(int i = 0 ; i<objetosmoviles.size() ; i++ ) {
			ObjetosMoviles m = objetosmoviles.get(i);
			if(m.equals(this)) {
				continue;
			}
			double distancia = m.getcenter().sustraer(getcenter()).getMagnitud();
			
			if(distancia < m.width/2 + width/2 && objetosmoviles.contains(this)) {
				colisiondeobjetos(m, this);
			}
		}
	}
	
	private void colisiondeobjetos(ObjetosMoviles a, ObjetosMoviles b) {
		if(a instanceof Player && ((Player)a).isSpawning()) {
			return;
		}
		if(b instanceof Player && ((Player)b).isSpawning()) {
			return;
		}
		if(!(a instanceof Meteoro && b instanceof Meteoro)) {
			gamestate.playExplosion(getcenter());
			a.Destruir();
			b.Destruir();
		}
	}
	
	protected void Destruir() {
		gamestate.getObjetosmoviles().remove(this);
	}
	
	protected Vector2D getcenter() {
		return new Vector2D(position.getX()+width/2,position.getY()+height/2);
	}

}
